# 1): 预装依赖库

 $ sudo apt-get install build-essential checkinstall
 $ sudo apt-get install build-essential checkinstallsudo apt-get install gcc-multilib libreadline-gplv2-dev libncursesw5-dev libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev libc6-i386 libbz2-dev

# 2): ubuntu 16.04 64位中预装了python2.7,这里加装一个pip：

 $ sudo apt install python-pip
 $ pip install qibuild

# 3): 安装 C++ sdk 以及 cross(交叉编译器ctc-toolchain)
[C++ SDK](https://drive.google.com/open?id=1vSsmdZ-FWL_bBMNC06_iaHsDi77jvbwS)
[cross-toolchain](https://drive.google.com/open?id=162PeZSlJ2_Skj8nzoH5qBYcyolB-7E3t)

下载后自己选择储存路径，下面path_to_sdk和path_to_ctc用对应的路径替换

# 3): 配置qibuild toolchain

 $ qitoolchain create linux-sdk path_to_SDK/toolchain.xml
 $ qibuild add-config linux-sdk -t linux-sdk

linux-sdk用于编译运行于PC端的 C++ 代码

 $ qitoolchain create atom-sdk path_to_cross-toolchain/toolchain.xml
 $ qibuild add-config atom-sdk -t atom-sdk

atom-sdk用于编译安装在NAO终端的 C++ 代码

 $ qitoolchain list

此时应该可以看到两个sdk：
× atom-sdk
× linux-sdk

# 4): 连接NAO
 $ ssh nao@<nao_ip>

# 利用 tutorials-master/2_local-module-creation 演示文件编译以及连接
## PC端实例：使用linux-sdk编译
进入 tutorials-master/2_local-module-creation/mymodule-example 文件夹内:

 $ qibuild configure -c linux-sdk
 $ qibuild make -c linux-sdk

期间可能会看到warning，然后可以看到 mymodule-example 文件夹内多了一个 build-linux-sdk 文件夹。

 $ cd build-linux-sdk/sdk/lib/naoqi/ 

可以看到 libmymodule.so 文件,这是一个动态连接库文件，需要将其传到 NAO 终端:

 $ scp libmymodule.so nao@<nao_ip>:~/nao/somewhere_you_like
 $ ssh nao@<nao_ip>
 $ cd ~/nao/naoqi/preferences/
 $ vi autoload.ini

在[user]下方添加：
 path_to_libmymodule/libmymodule.so
然后重启NAO，在PC端进入 tutorials-master/2_local-module-creation/connect-to module 文件夹内

 $ qibuild configure -c linux-sdk
 $ qibuild make -c linux-sdk

期间可能会看到warning，然后可以看到 mymodule-example 文件夹内多了一个 build-linux-sdk 文件夹。

 $ cd build-linux-sdk/sdk/bin
 $ ./myproject --pip <nao_ip>

此时NAO应该能发出声音.
